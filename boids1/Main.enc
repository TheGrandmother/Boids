import Random
-- import Util -- commented to avoid duplicate inclusion
import Vectors
import Boid

class Main {

  def main(args: [String]): void {
    setSeed(1);
    print("Hi! {}\n", |args|);
    print("RandomReal is {}\n", randomReal(0, 10));
    print("RandomReal is {}\n", randomReal(0, 10));
    print("RandomReal is {}\n", randomReal(0, 10));
    print("RandomReal is {}\n", randomReal(0, 10));
  }
}

class Flock
  boids : [Boid] -- Use static array as a size
  cap   : int    -- Capacity
  len   : int    -- Actual length

  def init() : void {
    this.cap = 1000;
    this.len = 0;
    this.boids = new [Boid](this.cap)
  }

  def add(b: Boid): void {
    if (this.len >= this.cap) then
      let newBoids = new [Boid](this.cap + 10) in {
        repeat i <- this.len
          newBoids[i] = this.boids[i];
        this.boids = newBoids;
        this.cap  = this.cap + 10
        -- this.len unchanged
      };
    this.boids[this.len] = b;
    this.len = this.len + 1
  }

  def size(): int {
    this.len
  }

  def step(): void {
    let bdata = new [BoidData](this.size()) in {
      repeat i <- this.size()
        bdata[i] = (this.boids[i]).data
    };
    for b in this.boids {
      b!move(bdata)
    }
  }

  def ack(b: Boid, i: int): void {
    boids[i] = b;
    moved = moved + 1;
    if moved == this.size() then
      this.step()
  }

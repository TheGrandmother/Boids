
class Group {
  myBoids: [Boid]
  groups: [Group]
  flock: Flock

  otherLocs: [Vector]
  otherVels: [Vector]

  def init(nBoids: int, w: int, h: int, groups: [Group], f: Flock, id: int): void {
    this.myBoids = new [Boid](nBoids/(|groups|));
    this.groups = groups;
    this.flock = f;
    repeat i <- nBoids/(|groups|) {
      this.myBoids[i] = new Boid((i + 1)  * (id+1), new Vector(w/2, w/2), w, h);
    };
  }

  def move(locs: [Vector], vels: [Vector]): void {
    repeat i <- |this.myBoids|
      (this.myBoids[i]).move(locs, vels);
    ()
  }

  def locs_vels(): ([Vector], [Vector]) {
    let size = |this.myBoids|;
    this.otherLocs = new [Vector](size);
    this.otherVels = new [Vector](size);
    let j = 0;
    for boid in this.myBoids {
      this.otherLocs[j] = boid.location;
      this.otherVels[j] = boid.velocity;
      j = j + 1;
    };
    (this.otherLocs, this.otherVels)
  }
}
